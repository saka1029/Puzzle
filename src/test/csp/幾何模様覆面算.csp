problem 幾何模様覆面算;

import java.util.stream.*;

#     ABA
# ×  ABA
# --------
#     CAC
#    ABA	
#   CAC		
# --------
#   CCDCC

variable [0..9] A B C D;

constraint A > 0;
constraint C > 0;

#constraint n(A,B,A) * n(A,B,A) == n(C,C,D,C,C);
constraint n(A,B,A) * n(A) == n(C,A,C);
constraint n(A,B,A) * n(B) == n(A,B,A);
constraint n(C,A,C) + n(A,B,A,0) + n(C,A,C,0,0) == n(C,C,D,C,C);

static int n(int... digits) {
    return IntStream.of(digits).reduce(0, (n, d) -> n * 10 + d);
}
